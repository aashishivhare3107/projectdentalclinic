{"version":3,"file":"static/js/297.3128a8c5.chunk.js","mappings":"4NAMAA,EAAAA,EAAAA,SAAAA,QAAyBC,4BAuJzB,UArJA,WACE,OAAwBC,EAAAA,EAAAA,UAAS,IAAG,eAA7BC,EAAI,KAAEC,EAAO,KACpB,GAA8BF,EAAAA,EAAAA,WAAS,GAAM,eAAtCG,EAAO,KAAEC,EAAU,KAC1B,GAAsCJ,EAAAA,EAAAA,UAAS,CAC7CK,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,aAAc,KACd,eANKC,EAAW,KAAEC,EAAc,KAO5BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAc,SAACC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACd,OAAOP,GAAe,kBACjBD,GAAW,cACbO,EAAOC,IAEZ,EAEMC,EAAQ,yCAAG,WAAOC,GAAO,4EAC7BhB,GAAW,GACU,eAAjBgB,EAAQC,MAA0C,cAAjBD,EAAQC,OACrCC,EAAO,IAAIC,UACZC,OAAO,OAAQJ,GACpBE,EAAKE,OAAO,gBAAiBzB,YAC7BuB,EAAKE,OAAO,aAAczB,aAC1B0B,MAAM1B,yDAA2C,CAC/C2B,OAAQ,OACRC,KAAML,IAELM,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACN,GAAI,OAAKpB,EAAQoB,EAAKS,IAAIC,WAAW,IAC9C5B,GAAW,KAEXA,GAAW,GACX6B,EAAAA,GAAAA,MAAY,iDACb,2CACF,gBAlBa,sCAoBRC,EAAU,yCAAG,WAAOnB,GAAC,sFAEJ,GAFI,SAEvBA,EAAEoB,kBAEEhC,EAAQ,CAAD,mDACE,KAATF,EAAW,iDAE2C,GAAlDI,EACNK,EADML,UAAWC,EACjBI,EADiBJ,SAAUC,EAC3BG,EAD2BH,MAAOC,EAClCE,EADkCF,SAAUC,EAC5CC,EAD4CD,aAEzCJ,GAAcC,GAAaC,GAAUC,GAAaC,EAAY,0CAC1DwB,EAAAA,GAAAA,MAAY,oCAAkC,aAC5C5B,EAAU+B,OAAS,GAAC,0CACtBH,EAAAA,GAAAA,MAAY,kDAAgD,aAC1D3B,EAAS8B,OAAS,GAAC,0CACrBH,EAAAA,GAAAA,MAAY,iDAA+C,aACzDzB,EAAS4B,OAAS,GAAC,0CACrBH,EAAAA,GAAAA,MAAY,gDAA8C,WACxDzB,IAAaC,EAAY,0CAC3BwB,EAAAA,GAAAA,MAAY,2BAAyB,yBAGvBA,EAAAA,GAAAA,QACrBnC,EAAAA,EAAAA,KAAW,iBAAkB,CAC3BO,UAAAA,EACAC,SAAAA,EACAC,MAAAA,EACAC,SAAAA,EACA6B,IAAKpC,IAEP,CACEqC,QAAS,sBACTC,QAAS,+BACTC,MAAO,0BACPrC,QAAS,wBAEX,KAAD,GAdW,OAcX,SAdW,EAAJmB,KAAI,kBAeLV,EAAS,YAAU,4FAE7B,gBAtCe,sCAwChB,OACE,oBAAS6B,UAAU,+BAA8B,UAC/C,iBAAKA,UAAU,iCAAgC,WAC7C,eAAIA,UAAU,eAAc,SAAC,SAC7B,kBACEC,SAAUR,EACVO,UAAU,gBAAe,WAEzB,kBACEpB,KAAK,OACLJ,KAAK,YACLwB,UAAU,aACVE,YAAY,wBACZzB,MAAOR,EAAYL,UACnBuC,SAAU9B,KAEZ,kBACEO,KAAK,OACLJ,KAAK,WACLwB,UAAU,aACVE,YAAY,uBACZzB,MAAOR,EAAYJ,SACnBsC,SAAU9B,KAEZ,kBACEO,KAAK,QACLJ,KAAK,QACLwB,UAAU,aACVE,YAAY,mBACZzB,MAAOR,EAAYH,MACnBqC,SAAU9B,KAEZ,kBACEO,KAAK,OACLuB,SAAU,SAAC7B,GAAC,OAAKI,EAASJ,EAAEC,OAAO6B,MAAM,GAAG,EAC5C5B,KAAK,cACL6B,GAAG,cACHL,UAAU,gBAEZ,kBACEpB,KAAK,WACLJ,KAAK,WACLwB,UAAU,aACVE,YAAY,sBACZzB,MAAOR,EAAYF,SACnBoC,SAAU9B,KAEZ,kBACEO,KAAK,WACLJ,KAAK,eACLwB,UAAU,aACVE,YAAY,wBACZzB,MAAOR,EAAYD,aACnBmC,SAAU9B,KAEZ,mBACEO,KAAK,SACLoB,UAAU,eACVM,WAAU5C,EAAuB,SAClC,eAQX,C","sources":["pages/CreateDoctor.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport \"../styles/register.css\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n\nfunction Register() {\n  const [file, setFile] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [formDetails, setFormDetails] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n    confpassword: \"\",\n  });\n  const navigate = useNavigate();\n\n  const inputChange = (e) => {\n    const { name, value } = e.target;\n    return setFormDetails({\n      ...formDetails,\n      [name]: value,\n    });\n  };\n\n  const onUpload = async (element) => {\n    setLoading(true);\n    if (element.type === \"image/jpeg\" || element.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", element);\n      data.append(\"upload_preset\", process.env.REACT_APP_CLOUDINARY_PRESET);\n      data.append(\"cloud_name\", process.env.REACT_APP_CLOUDINARY_CLOUD_NAME);\n      fetch(process.env.REACT_APP_CLOUDINARY_BASE_URL, {\n        method: \"POST\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => setFile(data.url.toString()));\n      setLoading(false);\n    } else {\n      setLoading(false);\n      toast.error(\"Please select an image in jpeg or png format\");\n    }\n  };\n\n  const formSubmit = async (e) => {\n    try {\n      e.preventDefault();\n\n      if (loading) return;\n      if (file === \"\") return;\n\n      const { firstname, lastname, email, password, confpassword } =\n        formDetails;\n      if (!firstname || !lastname || !email || !password || !confpassword) {\n        return toast.error(\"Input field should not be empty\");\n      } else if (firstname.length < 3) {\n        return toast.error(\"First name must be at least 3 characters long\");\n      } else if (lastname.length < 3) {\n        return toast.error(\"Last name must be at least 3 characters long\");\n      } else if (password.length < 5) {\n        return toast.error(\"Password must be at least 5 characters long\");\n      } else if (password !== confpassword) {\n        return toast.error(\"Passwords do not match\");\n      }\n\n      const { data } = await toast.promise(\n        axios.post(\"/user/register\", {\n          firstname,\n          lastname,\n          email,\n          password,\n          pic: file,\n        }),\n        {\n          pending: \"Registering user...\",\n          success: \"User registered successfully\",\n          error: \"Unable to register user\",\n          loading: \"Registering user...\",\n        }\n      );\n      return navigate(\"/login2\");\n    } catch (error) {}\n  };\n\n  return (\n    <section className=\"register-section flex-center\">\n      <div className=\"register-container flex-center\">\n        <h2 className=\"form-heading\">Add</h2>\n        <form\n          onSubmit={formSubmit}\n          className=\"register-form\"\n        >\n          <input\n            type=\"text\"\n            name=\"firstname\"\n            className=\"form-input\"\n            placeholder=\"Enter your first name\"\n            value={formDetails.firstname}\n            onChange={inputChange}\n          />\n          <input\n            type=\"text\"\n            name=\"lastname\"\n            className=\"form-input\"\n            placeholder=\"Enter your last name\"\n            value={formDetails.lastname}\n            onChange={inputChange}\n          />\n          <input\n            type=\"email\"\n            name=\"email\"\n            className=\"form-input\"\n            placeholder=\"Enter your email\"\n            value={formDetails.email}\n            onChange={inputChange}\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => onUpload(e.target.files[0])}\n            name=\"profile-pic\"\n            id=\"profile-pic\"\n            className=\"form-input\"\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            className=\"form-input\"\n            placeholder=\"Enter your password\"\n            value={formDetails.password}\n            onChange={inputChange}\n          />\n          <input\n            type=\"password\"\n            name=\"confpassword\"\n            className=\"form-input\"\n            placeholder=\"Confirm your password\"\n            value={formDetails.confpassword}\n            onChange={inputChange}\n          />\n          <button\n            type=\"submit\"\n            className=\"btn form-btn\"\n            disabled={loading ? true : false}\n          >\n            Add\n          </button>\n        </form>\n         \n      </div>\n    </section>\n  );\n}\n\nexport default Register;\n"],"names":["axios","process","useState","file","setFile","loading","setLoading","firstname","lastname","email","password","confpassword","formDetails","setFormDetails","navigate","useNavigate","inputChange","e","target","name","value","onUpload","element","type","data","FormData","append","fetch","method","body","then","res","json","url","toString","toast","formSubmit","preventDefault","length","pic","pending","success","error","className","onSubmit","placeholder","onChange","files","id","disabled"],"sourceRoot":""}